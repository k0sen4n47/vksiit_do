function y(e=".tinymce-editor"){tinymce.init({selector:e,height:400,menubar:!0,plugins:["advlist","autolink","lists","link","image","charmap","preview","anchor","searchreplace","visualblocks","code","fullscreen","insertdatetime","media","table","help","wordcount","codesample"],toolbar:"undo redo | blocks | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | codesample code | help",content_style:'body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; font-size: 14px; }',language:"ru",language_url:"/js/tinymce/langs/ru.js",branding:!1,promotion:!1,setup:function(o){o.on("change",function(){o.save()})}})}function v(e){console.log("Initializing CodeMirror for page:",e),console.log("Page element HTML:",e.outerHTML);const o=e.querySelector(".html-editor"),u=e.querySelector(".css-editor"),i=e.querySelector(".preview-frame"),r=e.querySelector('textarea[name*="[html]"]'),l=e.querySelector('textarea[name*="[css]"]');if(console.log("Found elements:",{htmlEditor:o,cssEditor:u,preview:i,htmlTextarea:r,cssTextarea:l}),!o||!u||!i){console.error("Required elements not found:",{htmlEditor:!!o,cssEditor:!!u,preview:!!i});return}if(!r||!l){console.error("Hidden textarea fields not found:",{htmlTextarea:!!r,cssTextarea:!!l});return}const s=CodeMirror(o,{mode:"htmlmixed",theme:"default",lineNumbers:!0,autoCloseTags:!0,autoCloseBrackets:!0,matchBrackets:!0,indentUnit:4,tabSize:4,lineWrapping:!0,value:r.value||"",extraKeys:{"Ctrl-Space":"autocomplete"}}),c=CodeMirror(u,{mode:"css",theme:"default",lineNumbers:!0,autoCloseBrackets:!0,matchBrackets:!0,indentUnit:4,tabSize:4,lineWrapping:!0,value:l.value||"",extraKeys:{"Ctrl-Space":"autocomplete"}});function h(){r.value=s.getValue(),l.value=c.getValue(),console.log("Saved to textarea:",{html:r.value,css:l.value})}function d(){const t=s.getValue(),a=c.getValue(),n=i.contentDocument||i.contentWindow.document;n.open(),n.write(`
            <!DOCTYPE html>
            <html>
            <head>
                <style>${a}</style>
            </head>
            <body>${t}</body>
            </html>
        `),n.close(),h()}s.on("change",function(t){d(),console.log("HTML changed:",t.getValue())}),c.on("change",function(t){d(),console.log("CSS changed:",t.getValue())}),d(),h();const g=e.querySelector(".theme-selector");g&&g.addEventListener("change",t=>{const a=t.target.value;s.setOption("theme",a),c.setOption("theme",a)});const f=e.querySelector(".download-zip");f&&f.addEventListener("click",()=>{const t=s.getValue(),a=c.getValue(),n=new JSZip;n.file("index.html",t),n.file("styles.css",a),n.generateAsync({type:"blob"}).then(p=>{const m=document.createElement("a");m.href=URL.createObjectURL(p),m.download="code.zip",m.click()})}),console.log("CodeMirror initialized successfully")}export{y as a,v as i};
