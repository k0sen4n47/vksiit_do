# Функционал сайта (образовательная платформа)

## Роли пользователей
- **Администратор**
- **Преподаватель**
- **Студент**

---

## Основные страницы и разделы

### 1. Гостевой доступ
- Главная страница (welcome)
- Страница входа (login)
- Страница регистрации (register)

### 2. Преподаватель
- **Дашборд преподавателя**
- **Мои задания** (список всех созданных заданий)
- **Создать задание** (форма создания задания)
- **Просмотр задания** (детальная страница задания, просмотр страниц, файлов, списка студентов и их ответов)
- **Редактирование задания**
- **Просмотр ответа студента** (страница с кодом, файлами, предпросмотром)
- **Группы** (список, создание, редактирование групп)
- **Предметы** (список, создание, редактирование предметов)
- **Профиль преподавателя**

### 3. Студент
- **Дашборд студента**
- **Мои предметы** (список предметов)
- **Список заданий по предмету**
- **Просмотр задания** (страница с редактором кода, загрузкой файлов, предпросмотром)
- **Отправка ответа на задание**
- **Просмотр своих ответов и статуса проверки**
- **Профиль студента**

### 4. Администратор
- **Дашборд администратора**
- **Пользователи** (список, создание, редактирование)
- **Группы** (управление всеми группами)
- **Предметы** (управление всеми предметами)
- **Задания** (все задания, редактирование, удаление)
- **Настройки платформы**

---

## Ключевые функции и возможности
- Аутентификация и авторизация (разделение ролей)
- CRUD для заданий, групп, предметов, пользователей
- Редактор кода (CodeMirror) с предпросмотром (HTML/CSS)
- Автосохранение кода для студентов (localStorage)
- Прикрепление файлов к заданиям и ответам
- Проверка и оценка работ преподавателем
- Комментарии/заметки преподавателя к ответу
- Управление статусом задания (активно, завершено, архив)
- Импорт/экспорт заданий (опционально)
- Уведомления о новых заданиях и ответах (опционально)

---

# Средства платформы и инструменты разработки

## Backend
- **Язык:** PHP
- **Фреймворк:** Laravel
- **ORM:** Eloquent
- **Миграции:** Laravel Migrations
- **Валидация:** Laravel Validation
- **Аутентификация:** Laravel Auth
- **API:** Laravel Controllers/Routes

## Frontend
- **Blade-шаблоны** (Laravel Blade)
- **CSS:** Tailwind CSS, кастомные стили
- **JS:** Vanilla JS, CodeMirror, TinyMCE (для текстовых редакторов)
- **Vite** (сборка ассетов)
- **Font Awesome** (иконки)

## Хранение данных
- **База данных:** MySQL/MariaDB
- **Файлы:** Хранятся в storage/app/public, доступны через symlink в public/storage

## Прочее
- **Git** (контроль версий)
- **phpunit** (тестирование)
- **MAMP/XAMPP/Docker** (локальная разработка)
- **Postman** (тестирование API)
- **Логи:** storage/logs/laravel.log

---

# Структура проекта (основные директории)
- `app/Http/Controllers` — контроллеры
- `app/Models` — модели
- `resources/views` — Blade-шаблоны
- `resources/js` — JS-скрипты
- `resources/css` — CSS-стили
- `routes/web.php` — маршруты
- `database/migrations` — миграции
- `public/` — публичные ассеты

---

# Пример бизнес-процесса
1. Преподаватель создаёт задание (HTML/CSS, тест, файл и т.д.)
2. Студент видит задание в разделе "Мои предметы" → "Задания"
3. Студент выполняет задание (код, файлы), отправляет ответ
4. Преподаватель видит ответы студентов, проверяет, выставляет оценку/комментарий
5. Студент видит результат проверки

---

(Документ можно дополнять по мере развития платформы)